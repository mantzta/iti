{"ast":null,"code":"import { createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-0e4a17a3\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"Sarah added some wood to your fire for the next 10 minutes\", -1\n/* HOISTED */\n));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([\"success\", {\n      'visible': $data.show,\n      'hidden': !$data.show\n    }])\n  }, [_hoisted_1, _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.hideSuccess && $options.hideSuccess(...args))\n  }, \"Great!\")], 2\n  /* CLASS */\n  );\n}","map":{"version":3,"mappings":";;;;gEAGEA,oBAAmE,IAAnE,EAAmE,IAAnE,EAAI,4DAAJ,EAA8D;AAAA;AAA9D;;;uBADFC,oBAGM,KAHN,EAGM;AAHDC,SAAK,mBAAC,SAAD,EAAU;AAAA,iBAAoBC,UAApB;AAAwB,iBAAYA;AAApC,KAAV;AAGJ,GAHN,GACEC,YACAJ,oBAA4C,QAA5C,EAA4C;AAAnCK,WAAK,yCAAEC,qDAAF;AAA8B,GAA5C,EAA6B,QAA7B,EAFF;;AAAA","names":["_createElementVNode","_createElementBlock","class","$data","_hoisted_1","onClick","$options"],"sourceRoot":"","sources":["/Users/tamara/Docs/01_Master/Interaction Technology Innovation/Project/iti/src/components/GetWood.vue"],"sourcesContent":["<template>\n\n<div class=\"success\" :class=\"{'visible':show, 'hidden':!show}\">\n  <h3>Sarah added some wood to your fire for the next 10 minutes</h3>\n  <button @click=\"hideSuccess\">Great!</button>\n</div>\n  \n</template>\n\n<script>\nimport axios from 'axios';\nimport { store } from '../store'\n\nexport default {\n  name: 'GetWood',\n\n  data() {\n    return {\n      errors: [],\n      store,\n      postBody: {\n        v: true,\n        seg: [\n            {\n              start: 0,\n              stop: 30,\n              bri: 255,\n              col: [\n              [255, 255, 255, 1],\n              [0, 0, 0, 0],\n              [0, 0, 0, 0]\n            ],\n            },\n          ],\n      },\n      show: false,\n    }\n  },\n\n  methods: {\n    sendWood() {\n      console.log(\"sends wood now to fire\")\n      axios.post(\"http://\" + store.ip + \"/json/state\", this.postBody)\n      .then(() => {\n        setTimeout(() => {\n          const postBody = {\n            v: true,\n            seg: [\n              {\n                start: 0,\n                stop: 15,\n                bri: 50,\n                col: [\n                  [this.store.red, this.store.green, this.store.blue, 1],\n                  [0, 0, 0, 0],\n                  [0, 0, 0, 0]\n                ],\n              },\n        ],\n          }\n          axios.post(\"http://\" + store.ip + \"/json/state\", postBody)\n        }, 60000)\n      })\n      .catch(e => {\n        this.errors.push(e)\n      })\n    },\n    hideSuccess() {\n      this.store.triggerWood = false\n      this.show = false\n    },\n  },\n\n  async created() {\n    if (store.triggerWood) {\n      setTimeout(() => {\n        this.show = true\n\n        this.sendWood()\n      }, 15000)\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\ndiv {\n  margin-top: 30px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}