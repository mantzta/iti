{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'AddWood',\n\n  data() {\n    return {\n      on: false,\n      errors: [],\n      postBody: {\n        v: true,\n        seg: [{\n          \"start\": 0,\n          \"stop\": 5,\n          \"bri\": 255\n        }]\n      }\n    };\n  },\n\n  methods: {\n    changeFire() {\n      console.log(\"change fire\");\n      axios.post(`http://[WLED-IP]/json/state`, {\n        body: this.postBody\n      }).then().catch(e => {\n        this.errors.push(e);\n      });\n    },\n\n    startDrag(evt) {\n      evt.dataTransfer.dropEffect = 'move';\n      evt.dataTransfer.effectAllowed = 'move';\n    },\n\n    onDrop() {\n      console.log(\"added log\");\n    }\n\n  },\n\n  async created() {\n    try {\n      const response = await axios.get(`http://[WLED-IP]/json/state`);\n      this.on = response.on;\n    } catch (e) {\n      this.errors.push(e);\n    }\n  }\n\n};","map":{"version":3,"mappings":"AAkBA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe;AACbC,MAAI,EAAE,SADO;;AAEbC,MAAI,GAAG;AACL,WAAO;AACLC,QAAE,EAAE,KADC;AAELC,YAAM,EAAE,EAFH;AAGLC,cAAQ,EAAE;AACRC,SAAC,EAAE,IADK;AAERC,WAAG,EAAE,CACD;AACE,mBAAS,CADX;AAEE,kBAAQ,CAFV;AAGE,iBAAO;AAHT,SADC;AAFG;AAHL,KAAP;AAcD,GAjBY;;AAmBbC,SAAO,EAAE;AACPC,cAAU,GAAG;AACXC,aAAO,CAACC,GAAR,CAAY,aAAZ;AACAX,WAAK,CAACY,IAAN,CAAY,6BAAZ,EAA0C;AACxCC,YAAI,EAAE,KAAKR;AAD6B,OAA1C,EAGCS,IAHD,GAICC,KAJD,CAIOC,KAAK;AACV,aAAKZ,MAAL,CAAYa,IAAZ,CAAiBD,CAAjB;AACD,OAND;AAOD,KAVM;;AAWPE,aAAS,CAACC,GAAD,EAAM;AACbA,SAAG,CAACC,YAAJ,CAAiBC,UAAjB,GAA8B,MAA9B;AACAF,SAAG,CAACC,YAAJ,CAAiBE,aAAjB,GAAiC,MAAjC;AACD,KAdM;;AAePC,UAAM,GAAG;AACPb,aAAO,CAACC,GAAR,CAAY,WAAZ;AACD;;AAjBM,GAnBI;;AAuCb,QAAMa,OAAN,GAAgB;AACd,QAAI;AACF,YAAMC,QAAO,GAAI,MAAMzB,KAAK,CAAC0B,GAAN,CAAW,6BAAX,CAAvB;AACA,WAAKvB,EAAL,GAAUsB,QAAQ,CAACtB,EAAnB;AACF,KAHA,CAGE,OAAOa,CAAP,EAAU;AACV,WAAKZ,MAAL,CAAYa,IAAZ,CAAiBD,CAAjB;AACF;AACF;;AA9Ca,CAAf","names":["axios","name","data","on","errors","postBody","v","seg","methods","changeFire","console","log","post","body","then","catch","e","push","startDrag","evt","dataTransfer","dropEffect","effectAllowed","onDrop","created","response","get"],"sourceRoot":"","sources":["/Users/tamara/Docs/01_Master/Interaction Technology Innovation/Project/iti/src/components/AddWood.vue"],"sourcesContent":["<template>\n  <div>\n    <h3>Add wood to the fire</h3>\n    <div class=\"fire\" @drop=\"onDrop($event)\"><img alt=\"fire\" src=\"../assets/flame.svg\"></div>\n    \n    <div class=\"bottom\">\n      <img \n        alt=\"log\"\n        class=\"log\"\n        src=\"../assets/log.svg\"\n        draggable\n        @dragstart=\"startDrag($event)\"\n      >\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'AddWood',\n  data() {\n    return {\n      on: false,\n      errors: [],\n      postBody: {\n        v: true,\n        seg: [\n            {\n              \"start\": 0,\n              \"stop\": 5,\n              \"bri\": 255,\n            },\n          ],\n        }\n    }\n  },\n\n  methods: {\n    changeFire() {\n      console.log(\"change fire\")\n      axios.post(`http://[WLED-IP]/json/state`, {\n        body: this.postBody,\n      })\n      .then()\n      .catch(e => {\n        this.errors.push(e)\n      })\n    },\n    startDrag(evt) {\n      evt.dataTransfer.dropEffect = 'move'\n      evt.dataTransfer.effectAllowed = 'move'\n    },\n    onDrop() {\n      console.log(\"added log\")\n    },\n  },\n\n  async created() {\n    try {\n      const response = await axios.get(`http://[WLED-IP]/json/state`)\n      this.on = response.on\n    } catch (e) {\n      this.errors.push(e)\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0;\n}\n\n.bottom{\n  margin-top: 100px;\n}\n\n.log {\n  padding: 20px;\n}\n\n</style>\n"]},"metadata":{},"sourceType":"module"}