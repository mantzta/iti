{"ast":null,"code":"import axios from 'axios';\nimport { store } from '../store';\nexport default {\n  name: 'GetWood',\n\n  data() {\n    return {\n      errors: [],\n      store,\n      postBody: {\n        v: true,\n        seg: [{\n          start: 0,\n          stop: 30,\n          bri: 255,\n          col: [[232, 80, 91, 1], [0, 0, 0, 0], [0, 0, 0, 0]]\n        }]\n      },\n      show: false\n    };\n  },\n\n  methods: {\n    sendWood() {\n      console.log(\"sends wood now to fire\");\n      axios.post(\"http://\" + store.ip + \"/json/state\", this.postBody).then().catch(e => {\n        this.errors.push(e);\n      });\n    },\n\n    hideSuccess() {\n      this.store.triggerWood = false;\n      this.show = false;\n    }\n\n  },\n\n  async created() {\n    if (store.triggerWood) {\n      setTimeout(() => {\n        this.sendWood();\n        this.show = true;\n      }, 15000);\n    }\n  }\n\n};","map":{"version":3,"mappings":"AAUA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,UAAtB;AAEA,eAAe;AACbC,MAAI,EAAE,SADO;;AAGbC,MAAI,GAAG;AACL,WAAO;AACLC,YAAM,EAAE,EADH;AAELH,WAFK;AAGLI,cAAQ,EAAE;AACRC,SAAC,EAAE,IADK;AAERC,WAAG,EAAE,CACD;AACEC,eAAK,EAAE,CADT;AAEEC,cAAI,EAAE,EAFR;AAGEC,aAAG,EAAE,GAHP;AAIEC,aAAG,EAAE,CACL,CAAC,GAAD,EAAM,EAAN,EAAU,EAAV,EAAc,CAAd,CADK,EAEL,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAFK,EAGL,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAHK;AAJP,SADC;AAFG,OAHL;AAkBLC,UAAI,EAAE;AAlBD,KAAP;AAoBD,GAxBY;;AA0BbC,SAAO,EAAE;AACPC,YAAQ,GAAG;AACTC,aAAO,CAACC,GAAR,CAAY,wBAAZ;AACAhB,WAAK,CAACiB,IAAN,CAAW,YAAYhB,KAAK,CAACiB,EAAlB,GAAuB,aAAlC,EAAiD,KAAKb,QAAtD,EACCc,IADD,GAECC,KAFD,CAEOC,KAAK;AACV,aAAKjB,MAAL,CAAYkB,IAAZ,CAAiBD,CAAjB;AACD,OAJD;AAKD,KARM;;AASPE,eAAW,GAAG;AACZ,WAAKtB,KAAL,CAAWuB,WAAX,GAAyB,KAAzB;AACA,WAAKZ,IAAL,GAAY,KAAZ;AACD;;AAZM,GA1BI;;AAyCb,QAAMa,OAAN,GAAgB;AACd,QAAIxB,KAAK,CAACuB,WAAV,EAAuB;AACrBE,gBAAU,CAAC,MAAM;AACf,aAAKZ,QAAL;AAEA,aAAKF,IAAL,GAAY,IAAZ;AACD,OAJS,EAIP,KAJO,CAAV;AAKF;AACF;;AAjDa,CAAf","names":["axios","store","name","data","errors","postBody","v","seg","start","stop","bri","col","show","methods","sendWood","console","log","post","ip","then","catch","e","push","hideSuccess","triggerWood","created","setTimeout"],"sourceRoot":"","sources":["/Users/tamara/Docs/01_Master/Interaction Technology Innovation/Project/iti/src/components/GetWood.vue"],"sourcesContent":["<template>\n\n<div class=\"success\" :class=\"{'visible':show, 'hidden':!show}\">\n  <h3>Sarah added some wood to your fire for the next 10 minutes</h3>\n  <button @click=\"hideSuccess\">Great!</button>\n</div>\n  \n</template>\n\n<script>\nimport axios from 'axios';\nimport { store } from '../store'\n\nexport default {\n  name: 'GetWood',\n\n  data() {\n    return {\n      errors: [],\n      store,\n      postBody: {\n        v: true,\n        seg: [\n            {\n              start: 0,\n              stop: 30,\n              bri: 255,\n              col: [\n              [232, 80, 91, 1],\n              [0, 0, 0, 0],\n              [0, 0, 0, 0]\n            ],\n            },\n          ],\n      },\n      show: false,\n    }\n  },\n\n  methods: {\n    sendWood() {\n      console.log(\"sends wood now to fire\")\n      axios.post(\"http://\" + store.ip + \"/json/state\", this.postBody)\n      .then()\n      .catch(e => {\n        this.errors.push(e)\n      })\n    },\n    hideSuccess() {\n      this.store.triggerWood = false\n      this.show = false\n    },\n  },\n\n  async created() {\n    if (store.triggerWood) {\n      setTimeout(() => {\n        this.sendWood()\n\n        this.show = true\n      }, 15000)\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\ndiv {\n  margin-top: 30px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}